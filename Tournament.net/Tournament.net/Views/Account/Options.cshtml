@model Tournament.net.Models.AccountViewModel

@{
    ViewBag.Title = "Options";
}

<h2>Options</h2>

@using (Ajax.BeginForm("",null, new AjaxOptions(),new {  id = "optionsForm"  }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @* Username *@
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Email *@
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Image *@
        <div class="form-group">
            @Html.LabelFor(model => model.ImgURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Model.ImgURL" />
                @*<input type="file" name="photo" id="imgupload" />*@
            </div>
        </div>
        @* WinWord *@
        <div class="form-group">
            @Html.Label("WinWord´s", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">@Html.EditorFor(model => model.WinWords[0], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            <div class="col-md-3">@Html.EditorFor(model => model.WinWords[1], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            <div class="col-md-3">@Html.EditorFor(model => model.WinWords[2], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
        </div>
        @* CommonWord *@
        <div class="form-group">
            @Html.Label("CommonWord´s", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">@Html.EditorFor(model => model.CommonWords[0], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            <div class="col-md-3">@Html.EditorFor(model => model.CommonWords[1], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            <div class="col-md-3">@Html.EditorFor(model => model.CommonWords[2], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
        </div>
        @* LooseWord *@
        <div class="form-group">
            @Html.Label("LooseWord´s", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">@Html.EditorFor(model => model.LooseWords[0], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            <div class="col-md-3">@Html.EditorFor(model => model.LooseWords[1], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            <div class="col-md-3">@Html.EditorFor(model => model.LooseWords[2], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="btn_SaveOptions" class="btn btn-default" />
            </div>
        </div>
    </div>

    <hr />
}
<script type="text/javascript">

    loaded();
   
    function loaded() {
        document.getElementById("optionsForm").addEventListener("submit",
                function (event) {
                    event.preventDefault();
                    // this.id will show "form"
                    console.log("AccountOptions submit pressed!");
                    saveAccountChanges();
                },
                    false);
    }
    function saveAccountChanges() {

        HL.Spinner.toggle('300');
        $.ajax({
            dataType: "html",  // dataType = What I get from the action       
            type: "POST",   // type = What I´m gonna do with the controller         
            url: "SaveChanges/Account",   // url = controller/action           
            success: function (data) {    // if success, I run this function and "data" is what the action returns

                let html = data;
                HL.Top_Div_In_Index.html(HL.Top_Div_In_Index.html + html);
                HL.Spinner.toggle('300');
                HL.Top_Div_In_Index.toggle('500');
            }
        });

    }
   

</script>
