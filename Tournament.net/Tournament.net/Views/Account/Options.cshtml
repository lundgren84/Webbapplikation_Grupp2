@model Tournament.net.Models.AccountViewModel

@{
    ViewBag.Title = "Options";
}

<h2>Options</h2>

@using (Html.BeginForm("SaveChanges", "Account", FormMethod.Post, new { id = "OptionsForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">

            <div class="col-sm-4">
                <div class="form-group">
                    @* Image *@
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ImgURL, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            <img src="@Model.ImgURL" />
                            @Html.HiddenFor(model => model.ImgURL)
                            @Html.HiddenFor(model => model.id)
                            @Html.HiddenFor(model => model.UserName)
                            @*<input type="file" name="photo" id="imgupload" />*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                @* Username *@
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @* @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.Label("", Model.UserName, new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                @* Points *@
                <div class="form-group">
                    @Html.Label("", "Points", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Label("", "120", new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                @* Email *@
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })               
                     </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" id="btn_SaveOptions" class="btn btn-default" />
                        <input type="button" value="Change Photo" id="btn_ChangePhoto" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        @* WinWord
            <div class="form-group">
                @Html.Label("WinWord´s", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">@Html.EditorFor(model => model.WinWords[0], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
                <div class="col-md-3">@Html.EditorFor(model => model.WinWords[1], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
                <div class="col-md-3">@Html.EditorFor(model => model.WinWords[2], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            </div>
             CommonWord
            <div class="form-group">
                @Html.Label("CommonWord´s", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">@Html.EditorFor(model => model.CommonWords[0], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
                <div class="col-md-3">@Html.EditorFor(model => model.CommonWords[1], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
                <div class="col-md-3">@Html.EditorFor(model => model.CommonWords[2], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            </div>
             LooseWord
            <div class="form-group">
                @Html.Label("LooseWord´s", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">@Html.EditorFor(model => model.LooseWords[0], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
                <div class="col-md-3">@Html.EditorFor(model => model.LooseWords[1], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
                <div class="col-md-3">@Html.EditorFor(model => model.LooseWords[2], new { htmlAttributes = new { @onfocus = "select()", @class = "form-control" } })</div>
            </div>*@

    </div>

    <hr />
}
<script type="text/javascript">

    $(document).ready(function () {
        var optionsForm = $("#OptionsForm");

        $('#btn_SaveOptions').click(function (e) {
            e.preventDefault();
            $.ajax({
                url: optionsForm.attr('action'),
                type: optionsForm.attr('method'),
                data: optionsForm.serialize(),
                success: function (data) {
                    alert("save-success");
                },
                error: function () {
                    alert("ERROR");
                }
            });
        })
    });
</script>
